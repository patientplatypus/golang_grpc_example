// Code generated by protoc-gen-go. DO NOT EDIT.
// source: main.proto

package protomain

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BiDiMessage struct {
	Nuts                 string   `protobuf:"bytes,1,opt,name=nuts,proto3" json:"nuts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiDiMessage) Reset()         { *m = BiDiMessage{} }
func (m *BiDiMessage) String() string { return proto.CompactTextString(m) }
func (*BiDiMessage) ProtoMessage()    {}
func (*BiDiMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ed94b0a22d11796, []int{0}
}

func (m *BiDiMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiDiMessage.Unmarshal(m, b)
}
func (m *BiDiMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiDiMessage.Marshal(b, m, deterministic)
}
func (m *BiDiMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiDiMessage.Merge(m, src)
}
func (m *BiDiMessage) XXX_Size() int {
	return xxx_messageInfo_BiDiMessage.Size(m)
}
func (m *BiDiMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BiDiMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BiDiMessage proto.InternalMessageInfo

func (m *BiDiMessage) GetNuts() string {
	if m != nil {
		return m.Nuts
	}
	return ""
}

type NutMessage struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NutMessage) Reset()         { *m = NutMessage{} }
func (m *NutMessage) String() string { return proto.CompactTextString(m) }
func (*NutMessage) ProtoMessage()    {}
func (*NutMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ed94b0a22d11796, []int{1}
}

func (m *NutMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutMessage.Unmarshal(m, b)
}
func (m *NutMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutMessage.Marshal(b, m, deterministic)
}
func (m *NutMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutMessage.Merge(m, src)
}
func (m *NutMessage) XXX_Size() int {
	return xxx_messageInfo_NutMessage.Size(m)
}
func (m *NutMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NutMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NutMessage proto.InternalMessageInfo

func (m *NutMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type NutReply struct {
	Reply                string   `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NutReply) Reset()         { *m = NutReply{} }
func (m *NutReply) String() string { return proto.CompactTextString(m) }
func (*NutReply) ProtoMessage()    {}
func (*NutReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ed94b0a22d11796, []int{2}
}

func (m *NutReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NutReply.Unmarshal(m, b)
}
func (m *NutReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NutReply.Marshal(b, m, deterministic)
}
func (m *NutReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NutReply.Merge(m, src)
}
func (m *NutReply) XXX_Size() int {
	return xxx_messageInfo_NutReply.Size(m)
}
func (m *NutReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NutReply.DiscardUnknown(m)
}

var xxx_messageInfo_NutReply proto.InternalMessageInfo

func (m *NutReply) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func init() {
	proto.RegisterType((*BiDiMessage)(nil), "protomain.BiDiMessage")
	proto.RegisterType((*NutMessage)(nil), "protomain.NutMessage")
	proto.RegisterType((*NutReply)(nil), "protomain.NutReply")
}

func init() { proto.RegisterFile("main.proto", fileDescriptor_7ed94b0a22d11796) }

var fileDescriptor_7ed94b0a22d11796 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x4d, 0xcc, 0xcc,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0x53, 0x20, 0x01, 0x25, 0x45, 0x2e, 0x6e,
	0xa7, 0x4c, 0x97, 0x4c, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x21, 0x21, 0x2e, 0x96, 0xbc,
	0xd2, 0x92, 0x62, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x49, 0x8d, 0x8b, 0xcb,
	0xaf, 0xb4, 0x04, 0xa6, 0x42, 0x82, 0x8b, 0x3d, 0x17, 0xc2, 0x84, 0x2a, 0x82, 0x71, 0x95, 0x14,
	0xb8, 0x38, 0xfc, 0x4a, 0x4b, 0x82, 0x52, 0x0b, 0x72, 0x2a, 0x85, 0x44, 0xb8, 0x58, 0x8b, 0x40,
	0x0c, 0xa8, 0x1a, 0x08, 0xc7, 0xa8, 0x99, 0x91, 0x8b, 0xc5, 0xaf, 0xb4, 0xa4, 0x58, 0xc8, 0x02,
	0xac, 0x34, 0x38, 0xb5, 0xa8, 0x2c, 0x55, 0x48, 0x54, 0x0f, 0xee, 0x1a, 0x3d, 0x84, 0x3d, 0x52,
	0xc2, 0xa8, 0xc2, 0x60, 0x63, 0x95, 0x18, 0x84, 0x1c, 0xb9, 0x38, 0x41, 0xee, 0x85, 0x68, 0x15,
	0x43, 0x52, 0x83, 0xe4, 0x0b, 0x29, 0x1c, 0xe2, 0x4a, 0x0c, 0x1a, 0x8c, 0x06, 0x8c, 0x4e, 0xaa,
	0x5c, 0x62, 0x99, 0xf9, 0x7a, 0xe9, 0x45, 0x05, 0xc9, 0x7a, 0x88, 0x30, 0x01, 0xb1, 0x9c, 0x38,
	0x03, 0x40, 0x4c, 0xdf, 0xc4, 0xcc, 0xbc, 0x00, 0xc6, 0x24, 0x36, 0xb0, 0xb8, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0xeb, 0x49, 0x7b, 0xef, 0x39, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NutsClient is the client API for Nuts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NutsClient interface {
	NutServe(ctx context.Context, in *NutMessage, opts ...grpc.CallOption) (*NutReply, error)
	BiDiServe(ctx context.Context, opts ...grpc.CallOption) (Nuts_BiDiServeClient, error)
}

type nutsClient struct {
	cc *grpc.ClientConn
}

func NewNutsClient(cc *grpc.ClientConn) NutsClient {
	return &nutsClient{cc}
}

func (c *nutsClient) NutServe(ctx context.Context, in *NutMessage, opts ...grpc.CallOption) (*NutReply, error) {
	out := new(NutReply)
	err := c.cc.Invoke(ctx, "/protomain.Nuts/NutServe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutsClient) BiDiServe(ctx context.Context, opts ...grpc.CallOption) (Nuts_BiDiServeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Nuts_serviceDesc.Streams[0], "/protomain.Nuts/BiDiServe", opts...)
	if err != nil {
		return nil, err
	}
	x := &nutsBiDiServeClient{stream}
	return x, nil
}

type Nuts_BiDiServeClient interface {
	Send(*BiDiMessage) error
	Recv() (*BiDiMessage, error)
	grpc.ClientStream
}

type nutsBiDiServeClient struct {
	grpc.ClientStream
}

func (x *nutsBiDiServeClient) Send(m *BiDiMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *nutsBiDiServeClient) Recv() (*BiDiMessage, error) {
	m := new(BiDiMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NutsServer is the server API for Nuts service.
type NutsServer interface {
	NutServe(context.Context, *NutMessage) (*NutReply, error)
	BiDiServe(Nuts_BiDiServeServer) error
}

func RegisterNutsServer(s *grpc.Server, srv NutsServer) {
	s.RegisterService(&_Nuts_serviceDesc, srv)
}

func _Nuts_NutServe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NutMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutsServer).NutServe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protomain.Nuts/NutServe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutsServer).NutServe(ctx, req.(*NutMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nuts_BiDiServe_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NutsServer).BiDiServe(&nutsBiDiServeServer{stream})
}

type Nuts_BiDiServeServer interface {
	Send(*BiDiMessage) error
	Recv() (*BiDiMessage, error)
	grpc.ServerStream
}

type nutsBiDiServeServer struct {
	grpc.ServerStream
}

func (x *nutsBiDiServeServer) Send(m *BiDiMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *nutsBiDiServeServer) Recv() (*BiDiMessage, error) {
	m := new(BiDiMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Nuts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protomain.Nuts",
	HandlerType: (*NutsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NutServe",
			Handler:    _Nuts_NutServe_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BiDiServe",
			Handler:       _Nuts_BiDiServe_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "main.proto",
}
